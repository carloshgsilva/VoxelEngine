#include "Common.frag"

PUSH(
    int ColorTextureRID;
    int NormalTextureRID;
    int VisibilityTextureRID;
    int MotionTextureRID;
    int DepthTextureRID;
    int _ViewBufferRID;
    int BVHBufferRID;
    int BVHLeafsBufferRID;
    int TLASRID;
    int VoxInstancesRID;
)

#define IMPORT
#include "View.frag"
#include "Light.frag"

COMPUTE(8, 8, 1)
void main() {
    ivec2 pixel = ivec2(gl_GlobalInvocationID.x,gl_GlobalInvocationID.y);
    vec2 uv = vec2(pixel+GetJitter())*GetiRes();
    vec3 o = GetCameraPosition();
    vec3 d = UVToRayDir(uv);

    vec3 albedo = vec3(1.0);
    vec3 material = vec3(1.0);
    vec2 motion = vec2(0);

    TraceHit hit;
#if 0
    if(RayTrace(o, d, hit, INF)) {
        normal = hit.normal;
        visibility = hit.visibility;
        motion = uv - WorldToUVLastView(o + d * hit.t);
        t = hit.t;
    }
#else
    if(TraceRay(o, d, INF, hit)) {
        GetMaterial(hit.visibility, albedo, material);
    }
#endif

    imageStore(Image2DW[ColorTextureRID], pixel, vec4(albedo, 1));
    imageStore(Image2DW[NormalTextureRID], pixel, vec4(hit.normal, 1));
    imageStore(UImage2DW[VisibilityTextureRID], pixel, uvec4(hit.visibility));
    imageStore(Image2DW[MotionTextureRID], pixel, vec4(motion, 0, 0));
    imageStore(Image2DW[DepthTextureRID], pixel, vec4(hit.t));
}