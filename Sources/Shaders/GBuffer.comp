#include "Common.frag"

PUSH(
    int ColorTextureRID;
    int NormalTextureRID;
    int VisibilityTextureRID;
    int MotionTextureRID;
    int DepthTextureRID;
    int _ViewBufferRID;
    int BVHBufferRID;
    int BVHLeafsBufferRID;
)

#define IMPORT
#include "View.frag"
#include "Light.frag"

COMPUTE(8, 8, 1)
void main() {
    vec2 uv = vec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)*GetiRes();
    vec3 o = GetCameraPosition();
    vec3 d = UVToRayDir(uv);

    vec3 outColor = vec3(1.0);
    vec3 outNormal = vec3(0);
    uint outVisibility = 0u;
    vec2 outMotion = vec2(0);
    float outT = INF;

    TraceHit hit;
    if(RayTrace(o, d, hit, INF)) {
        outNormal = hit.normal;
        outVisibility = hit.visibility;
        outMotion = uv - WorldToUVLastView(o + d * hit.t);
        outT = hit.t;
    }

    ivec2 dst = ivec2(gl_GlobalInvocationID.x,gl_GlobalInvocationID.y);
    imageStore(Image2DW[ColorTextureRID], dst, vec4(outColor, 1));
    imageStore(Image2DW[NormalTextureRID], dst, vec4(outNormal, 1));
    imageStore(UImage2DW[VisibilityTextureRID], dst, uvec4(outVisibility));
    imageStore(Image2DW[MotionTextureRID], dst, vec4(outMotion, 0, 0));
    imageStore(Image2DW[DepthTextureRID], dst, vec4(outT));
}