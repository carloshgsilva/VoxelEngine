#include "Common.frag"

PUSH(
    int OutRadianceTextureRID;
    int NormalTextureRID;
    int VisibilityTextureRID;
    int DepthTextureRID;
    int _ViewBufferRID;
    int TLASRID;
    int VoxInstancesRID;
)

#define IMPORT
#include "Probe.frag"

COMPUTE(8, 8, 1)
void main() {
    ivec2 pixel = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    ivec2 probePixel = (pixel/32)*32 + ivec2(GetJitter()*32);
    vec2 uv = vec2(probePixel)*GetiRes();
    vec3 o = GetCameraPosition();
    vec3 d = UVToRayDir(uv);

    Sampler samp;
    InitSampler(samp, pixel, GetFrame()%64);

    float t = texelFetch(Sampler2D[DepthTextureRID], probePixel, 0).x;
    vec3 normal = texelFetch(Sampler2D[NormalTextureRID], probePixel, 0).xyz;
    vec3 pos = o + d * t + normal*EPS*100.0;

    vec2 probeUV = (vec2(mod(pixel, 32)) + GetProbeJitter(probePixel))/32.0;
    vec3 dir = OctahedronEncode(probeUV);

    vec3 acc = vec3(0);
    if(dot(dir, normal) > 0) {
        acc = TraceScene(pos, dir, samp);
    }

    imageStore(Image2DW[OutRadianceTextureRID], pixel, vec4(acc,1));
}